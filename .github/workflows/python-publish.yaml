# This workflow will upload a Python Package using Twine when a release is created
# For more information see: https://help.github.com/en/actions/language-and-framework-guides/using-python-with-github-actions#publishing-to-package-registries

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Upload Python Package

on:
  release:
    types: [published]

jobs:
  deploy:
    env:
      PUBLISH_TAG: ${GITHUB_REF#refs/*/}
      VERSION_FILE: $(basename $GITHUB_REPOSITORY)/VERSION
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build
    - name: Check VERSION
      run: |
        if ! echo ${{ env.PUBLISH_TAG }} | grep -P -e "^\d+\.\d+\.\d+((rc|alpha)\d+)?$"; then
          echo "Tag ${{ env.PUBLISH_TAG }} doesn't match x.y.z pattern. Not pushing.";
          exit 1;
        fi
    - name: Build package
      run: |
        echo "Building ${{ env.PUBLISH_TAG }}"
        echo ${{ env.PUBLISH_TAG }} > ${{ env.VERSION_FILE }}
        python -m build
    - name: Publish package
      uses: pypa/gh-action-pypi-publish@27b31702a0e7fc50959f5ad993c78deac1bdfc29
      with:
        user: __token__
        password: ${{ secrets.PYPI_API_TOKEN }}
# the API token was generated for `opusone` account on pypi -- to regenerate,
# log in as `gridosbot@opusonesolutions.com`
